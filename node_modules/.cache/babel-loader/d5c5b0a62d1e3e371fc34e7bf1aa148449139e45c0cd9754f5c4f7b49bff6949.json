{"ast":null,"code":"var _jsxFileName = \"I:\\\\funix\\\\Funix-react\\\\Assigment 2\\\\ass 2 lan 2\\\\src\\\\pages\\\\search\\\\SearchResult.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport MovieDetail from \"../UI/MovieDetail/MovieDetail\";\nimport classes from \"./SearchResult.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"3545d00fdf25c7cb7e47140b30fc6d87\";\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`\n};\nconst SearchResult = props => {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [movieId, setMovieId] = useState(\"\");\n  const [original_title, setOriginal_title] = useState(\"\");\n  const [release_date, setRelease_date] = useState(\"\");\n  const [vote_average, setVote_average] = useState(\"\");\n  const [overview, setOverview] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    const fetchSearch = async () => {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3${requests.fetchSearch}&query=${props.searchResult}`);\n        if (!response.ok) {\n          throw new Error(\"Something went wrong!\");\n        }\n        const data = await response.json();\n        setMovie(data.results);\n\n        // console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSearch();\n  }, [props.searchResult]);\n  const clickHandler = (id, original_title, release_date, vote_average, overview) => {\n    setMovieId(id);\n    setOriginal_title(original_title);\n    setRelease_date(release_date);\n    setVote_average(vote_average);\n    setOverview(overview);\n    setIsOpen(movieId === id ? !isOpen : true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Result,\n      children: movie.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: e.original_title,\n          src: `https://image.tmdb.org/t/p/original${e.poster_path === null ? e.backdrop_path : e.poster_path}`,\n          onClick: () => clickHandler(e.id, e.original_title, e.release_date, e.vote_average, e.overview)\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(MovieDetail, {\n      movieId: movieId,\n      original_title: original_title,\n      release_date: release_date,\n      vote_average: vote_average,\n      overview: overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SearchResult, \"nhq23hNU+nWtD0r9KseWsQtHGfI=\");\n_c = SearchResult;\nexport default SearchResult;\nvar _c;\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"names":["useState","useEffect","MovieDetail","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","SearchResult","props","_s","movie","setMovie","movieId","setMovieId","original_title","setOriginal_title","release_date","setRelease_date","vote_average","setVote_average","overview","setOverview","isOpen","setIsOpen","response","fetch","searchResult","ok","Error","data","json","results","error","console","log","clickHandler","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Result","map","e","alt","src","poster_path","backdrop_path","onClick","_c","$RefreshReg$"],"sources":["I:/funix/Funix-react/Assigment 2/ass 2 lan 2/src/pages/search/SearchResult.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport MovieDetail from \"../UI/MovieDetail/MovieDetail\";\r\n\r\nimport classes from \"./SearchResult.module.css\";\r\n\r\nconst API_KEY = \"3545d00fdf25c7cb7e47140b30fc6d87\";\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\r\n};\r\n\r\nconst SearchResult = (props) => {\r\n  const [movie, setMovie] = useState([]);\r\n  const [movieId, setMovieId] = useState(\"\");\r\n  const [original_title, setOriginal_title] = useState(\"\");\r\n  const [release_date, setRelease_date] = useState(\"\");\r\n  const [vote_average, setVote_average] = useState(\"\");\r\n  const [overview, setOverview] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchSearch = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.themoviedb.org/3${requests.fetchSearch}&query=${props.searchResult}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        const data = await response.json();\r\n\r\n        setMovie(data.results);\r\n\r\n        // console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchSearch();\r\n  }, [props.searchResult]);\r\n\r\n  const clickHandler = (\r\n    id,\r\n    original_title,\r\n    release_date,\r\n    vote_average,\r\n    overview\r\n  ) => {\r\n    setMovieId(id);\r\n    setOriginal_title(original_title);\r\n    setRelease_date(release_date);\r\n    setVote_average(vote_average);\r\n    setOverview(overview);\r\n    setIsOpen(movieId === id ? !isOpen : true);\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Results</h1>\r\n\r\n      <div className={classes.Result}>\r\n        {movie.map((e) => {\r\n          return (\r\n            <img\r\n              key={e.id}\r\n              alt={e.original_title}\r\n              src={`https://image.tmdb.org/t/p/original${\r\n                e.poster_path === null ? e.backdrop_path : e.poster_path\r\n              }`}\r\n              onClick={() =>\r\n                clickHandler(\r\n                  e.id,\r\n                  e.original_title,\r\n                  e.release_date,\r\n                  e.vote_average,\r\n                  e.overview\r\n                )\r\n              }\r\n            ></img>\r\n          );\r\n        })}\r\n      </div>\r\n      {isOpen && (\r\n        <MovieDetail\r\n          movieId={movieId}\r\n          original_title={original_title}\r\n          release_date={release_date}\r\n          vote_average={vote_average}\r\n          overview={overview}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}